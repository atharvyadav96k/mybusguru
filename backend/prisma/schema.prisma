generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Org {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  code       String   @unique
  phone      String
  address    String
  password   String
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  users      User[]
  routes     Route[]
  stops      Stop[]
  banOrg     Boolean  @default(false)
}

model User {
  id        Int      @id @default(autoincrement())
  orgId     Int
  org       Org      @relation(fields: [orgId], references: [id])
  name      String?
  email     String?
  phone     String?
  role      String?  @default("user")
  studentId String   @unique
  routeId   Int?
  route     Route?   @relation(fields: [routeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Route {
  id         Int      @id @default(autoincrement())
  orgId      Int
  org        Org      @relation(fields: [orgId], references: [id])
  name       String
  startPoint String
  latitude   Float
  longitude  Float
  endPoint   String
  users      User[]
  stops      Stop[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Stop {
  id        Int   @id @default(autoincrement())
  orgId     Int
  org       Org   @relation(fields: [orgId], references: [id])
  latitude  Float
  longitude Float
  routeId   Int
  route     Route @relation(fields: [routeId], references: [id], onDelete: Cascade)
}
